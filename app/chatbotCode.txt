<style>
#chat-widget {
  position: fixed;
  bottom: 80px;
  right: 20px;
  width: 300px;
  background: white;
  border-radius: 10px;
  box-shadow: 0 0 10px #999;
  display: none;
  flex-direction: column;
  overflow: hidden;
  pointer-events: auto !important;
  z-index: 999999;
  font-family: Arial, sans-serif;
}
#chat-header {
  background: #333;
  color: white;
  padding: 10px;
  font-weight: bold;
}
#chat-messages {
  height: 250px;
  overflow-y: auto;
  padding: 10px;
  font-size: 14px;
}
#chat-input {
  display: flex;
  border-top: 1px solid #ccc;
}
#chat-input input {
  flex: 1;
  border: none;
  padding: 10px;
  font-size: 14px;
}
#chat-input button {
  background: #333;
  color: white;
  border: none;
  padding: 10px;
  cursor: pointer;
}
#chat-toggle {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: #333;
  color: white;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  font-size: 24px;
  text-align: center;
  line-height: 50px;
  cursor: pointer;
  pointer-events: auto !important;
  z-index: 999999;
}
</style>

<div id="chat-widget" style="display: flex;">
  <div id="chat-header">DH Genix Assistant</div>
  <div id="chat-messages"></div>
  <div id="chat-input">
    <input id="user-input" type="text" placeholder="Ask something...">
    <button id="send-btn">Send</button>
  </div>
</div>

<div id="chat-toggle">ðŸ’¬</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const chatToggle = document.getElementById("chat-toggle");
  const chatWidget = document.getElementById("chat-widget");
  const sendBtn = document.getElementById("send-btn");
  const userInput = document.getElementById("user-input");
  const chatMessages = document.getElementById("chat-messages");

  // Example of how you might get user_id from the application (you can change this based on your actual method)
  const userId = "#"; // Replace with actual user ID from your system or session

  chatToggle.addEventListener("click", function () {
    chatWidget.style.display = (chatWidget.style.display === "none" || chatWidget.style.display === "") ? "flex" : "none";
  });

  sendBtn.addEventListener("click", sendMessage);
  userInput.addEventListener("keypress", function (e) {
    if (e.key === "Enter") sendMessage();
  });

  async function sendMessage() {
    const message = userInput.value.trim();
    if (!message) return;

    appendMessage("You", message);
    userInput.value = "";

    try {
      const res = await fetch("/", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ query: message, user_id: userId })  // Sending user_id along with message
      });

      const data = await res.json();
      appendMessage("Bot", data.response);
    } catch (err) {
      appendMessage("Bot", "Sorry, could not connect to the chatbot.");
    }
  }

  function appendMessage(sender, text) {
    const msg = document.createElement("div");
    msg.innerHTML = `<strong>${sender}:</strong> ${text}`;
    chatMessages.appendChild(msg);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }
});
</script>
